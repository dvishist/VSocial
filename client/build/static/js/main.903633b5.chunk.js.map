{"version":3,"sources":["components/icons/icon.png","components/home/User.jsx","userContext.js","components/home/SearchUser.jsx","components/home/Topbar.jsx","components/home/rightbar/Rightbar.jsx","components/home/leftbar/Follower.jsx","components/home/leftbar/Leftbar.jsx","components/home/feed/Post.jsx","components/home/feed/FeedItem.jsx","components/home/feed/Feed.jsx","pages/Home.jsx","pages/Login.jsx","pages/Signup.jsx","components/home/UserPictures.jsx","components/home/EditProfile.jsx","pages/Profile.jsx","App.js","index.js"],"names":["User","props","href","userId","Image","style","marginTop","size","src","userImg","avatar","marginLeft","fontSize","fontWeight","verticalAlign","username","UserContext","createContext","axios","defaults","baseURL","process","imageURL","initialState","loading","results","value","users","searchReducer","state","action","type","query","window","location","id","selection","Error","SearchUser","history","useHistory","useEffect","a","token","localStorage","getItem","get","headers","responseUsers","data","map","user","title","image","getUsers","React","useReducer","dispatch","timeoutRef","useRef","handleSearchChange","useCallback","e","clearTimeout","current","setTimeout","length","re","RegExp","_","escapeRegExp","filter","result","test","Search","onResultSelect","onSearchChange","Topbar","useContext","setUser","removeItem","push","verifyUser","logout","post","className","background","color","border","font","cursor","outline","onClick","alt","img","height","width","_id","Button","basic","RightBar","Follower","name","backgroundColor","Leftbar","useState","followers","setFollowers","followings","setFollowings","followingList","following","Promise","all","then","followerList","Post","fileName","setFileName","file","setFile","postText","setPostText","setLoading","submitForm","FormData","append","response","addPost","console","log","Segment","secondary","TextArea","placeholder","timeGreeting","split","onChange","target","animated","Content","hidden","accept","files","visible","Icon","positive","Loader","active","FeedItem","postUser","likes","setLikes","isLiked","setLiked","handleLike","patch","liked","includes","Feed","Event","profilePicture","createdAt","Extra","text","description","images","as","labelPosition","icon","Label","posts","setPosts","newPost","relativeDate","Date","isNotMobile","document","createEvent","Home","Login","validEmail","setValidEmail","validPassword","setValidPassword","validLogin","setValidLogin","email","password","formValues","setFormValues","handleFormChange","currentValues","preventDefault","setItem","logo","Form","onSubmit","Field","pointing","inline","Signup","validUserName","passwordLength","passwordMatch","validation","setValidation","uniqueEmail","setUniqueEmail","fullName","confirmPassword","handleChange","signUp","validator","isEmail","alert","UserPictures","profile","cover","EditProfile","profilePictureName","coverPictureName","coverPicture","updatedUser","savedUser","profileData","profileSaved","coverData","coverSaved","hide","reload","message","required","profileUser","setProfileUser","setFollowing","editProfileComponentVisible","setEditProfileComponentVisible","fetchPosts","res","sorted","reverse","find","params","URLSearchParams","search","Object","fromEntries","entries","fetchData","Statistic","Group","Value","Dimmer","App","providerUser","useMemo","Provider","exact","path","ReactDOM","render","getElementById"],"mappings":"yaAAe,G,OAAA,IAA0B,kC,gBCE1B,SAASA,EAAKC,GAEzB,OACQ,iCACI,mBACIC,KAAI,uBAAkBD,EAAME,QADhC,SAGI,cAACC,EAAA,EAAD,CAAOC,MAAO,CAACC,UAAU,OAAQC,KAAK,OAAOC,IAAKP,EAAMQ,QAASC,QAAM,MAE3E,sBAAML,MAAO,CACTM,WAAY,MACZC,SAAU,OACVC,WAAY,OACZC,cAAc,UAJlB,SAMKb,EAAMc,c,6BCfdC,EAAcC,wBAAc,M,0CCIzCC,IAAMC,SAASC,QAAUC,4BACzB,IAAMC,EAAWD,mCAEXE,EAAe,CACjBC,SAAS,EACTC,QAAS,GACTC,MAAO,IAGPC,EAAQ,GAEZ,SAASC,EAAcC,EAAOC,GAC1B,OAAQA,EAAOC,MACX,IAAK,cACD,OAAOR,EACX,IAAK,eACD,OAAO,2BAAKM,GAAZ,IAAmBL,SAAS,EAAME,MAAOI,EAAOE,QACpD,IAAK,gBACD,OAAO,2BAAKH,GAAZ,IAAmBL,SAAS,EAAOC,QAASK,EAAOL,UACvD,IAAK,mBAED,OADAQ,OAAOC,SAAU,gBAAkBJ,EAAOK,GACnC,2BAAKN,GAAZ,IAAmBH,MAAOI,EAAOM,YACrC,QACI,MAAM,IAAIC,OAIP,SAASC,IACpB,IAAMC,EAAUC,cAEhBC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,6DACUC,EAAQC,aAAaC,QAAQ,SADvC,SAEgC3B,IAAM4B,IAAI,aAAc,CAChDC,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAJtC,OAEUK,EAFV,OAOIrB,EAAQqB,EAAcC,KAAKC,KAAI,SAAAC,GAAI,MAAK,CACpChB,GAAGgB,EAAKhB,GACRiB,MAAOD,EAAKpC,SACZsC,MAAO/B,EAAW6B,EAAKhB,GAAK,sBAVpC,4CADY,uBAAC,WAAD,wBAeZmB,KACF,IAEF,MAA0BC,IAAMC,WAAW5B,EAAeL,GAA1D,mBAAOM,EAAP,KAAc4B,EAAd,KACQjC,EAA4BK,EAA5BL,QAASC,EAAmBI,EAAnBJ,QAASC,EAAUG,EAAVH,MAEpBgC,EAAaH,IAAMI,SACnBC,EAAqBL,IAAMM,aAAY,SAACC,EAAGb,GAC7Cc,aAAaL,EAAWM,SACxBP,EAAS,CAAE1B,KAAM,eAAgBC,MAAOiB,EAAKvB,QAE7CgC,EAAWM,QAAUC,YAAW,WAC5B,GAA0B,IAAtBhB,EAAKvB,MAAMwC,OAAf,CAKA,IAAMC,EAAK,IAAIC,OAAOC,IAAEC,aAAarB,EAAKvB,OAAQ,KAGlD+B,EAAS,CACL1B,KAAM,gBACNN,QAAS4C,IAAEE,OAAO5C,GAJN,SAAC6C,GAAD,OAAYL,EAAGM,KAAKD,EAAOpB,iBALvCK,EAAS,CAAE1B,KAAM,kBAWtB,OACJ,IAOH,OANAwB,IAAMd,WAAU,WACZ,OAAO,WACHsB,aAAaL,EAAWM,YAE7B,IAEI,cAACU,EAAA,EAAD,CACHlD,QAASA,EACTmD,eAAgB,SAACb,EAAGb,GAAJ,OACZQ,EAAS,CAAE1B,KAAM,mBAAoBK,UAAWa,EAAKuB,OAAOpB,MAAOjB,GAAGc,EAAKuB,OAAOrC,GAAII,aAE1FqC,eAAgBhB,EAChBnC,QAASA,EACTC,MAAOA,IC/EA,SAASmD,EAAO5E,GAC3B,IAAMsC,EAAUC,cAChB,EAAuBsC,qBAAW9D,GAA3BmC,EAAP,EAAOA,KAAK4B,EAAZ,EAAYA,QAIZtC,qBAAU,YACU,uCAAG,gCAAAC,EAAA,yDACbC,EAAQC,aAAaC,QAAQ,SAC9BM,EAFc,qBAGXR,EAHW,0CAKgBzB,IAAM4B,IAAI,cAAe,CAC5CC,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAP3B,gBAKCM,EALD,EAKCA,KAKR8B,EAAQ9B,GAVD,kDAYPL,aAAaoC,WAAW,SACxBzC,EAAQ0C,KAAK,UAbN,gCAgBX1C,EAAQ0C,KAAK,UAhBF,0DAAH,qDAqBhBC,KACD,CAAC3C,EAAQwC,EAAQ5B,IAGpB,IAAMgC,EAAM,uCAAG,4BAAAzC,EAAA,6DACLC,EAAQC,aAAaC,QAAQ,SADxB,SAEL3B,IAAMkE,KAAK,eAAgB,GAAG,CAChCrC,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAJvB,OAOXV,OAAOC,SAAW,SAClBU,aAAaoC,WAAW,SARb,2CAAH,qDAWZ,OAAO,sBAAKK,UAAU,YAAf,UACH,qBAAKA,UAAU,aAAf,SACI,cAAC/C,EAAD,MAEJ,qBAAK+C,UAAU,eAAf,SACI,qBAAKA,UAAU,OAAf,SACI,wBACIhF,MAAO,CACPiF,WAAY,OACZC,MAAO,UACPC,OAAQ,OACRC,KAAM,UACNC,OAAQ,UACRC,QAAS,WAETC,QAAS,WAAKrD,EAAQ0C,KAAK,MAT/B,SAYI,mCAAK,qBAAKY,IAAI,IAAIrF,IAAKsF,EAAKC,OAAO,KAAKC,MAAM,OAA9C,kBAIX,sBAAKX,UAAU,cAAf,UACG,cAACrF,EAAD,CAAMG,OAAQgD,EAAK8C,IAAKxF,QAASR,EAAMQ,UACvC,cAACyF,EAAA,EAAD,CAAQC,OAAK,EAACZ,MAAM,QAAQK,QAAST,EAArC,0BArEZjE,IAAMC,SAASC,QAAUC,4B,OCPV,SAAS+E,IACpB,OAAO,qBAAKf,UAAU,WAAf,SACH,iD,OCJO,SAASgB,EAASpG,GAC7B,OACI,sBAAKoF,UAAU,WAAf,UACI,oBAAGnF,KAAI,sBAAiBD,EAAMkC,IAA9B,UACI,qBAAK0D,IAAI,GAAGrF,IAAKP,EAAM6F,MACvB,+BAAO7F,EAAMqG,UAEjB,uBACIjG,MAAO,CACPkG,gBAAgC,aAAftG,EAAM8B,KAAsB,YAAc,aAF/D,SAIE9B,EAAM8B,UCPpBb,IAAMC,SAASC,QAAUC,4BACzB,IAAMC,EAAWD,kCAEF,SAASmF,EAAT,GAA0B,IAARrD,EAAO,EAAPA,KAC7B,EAAkCsD,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMlE,EAAQC,aAAaC,QAAQ,SA6BnC,OA1BAJ,qBAAU,WACN,IAAMqE,EAAgB3D,EAAK4D,UAAU7D,IAAf,uCAAoB,WAAMf,GAAN,iBAAAO,EAAA,sEACfxB,IAAM4B,IAAN,iBAAoBX,GAAM,CAC7CY,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAHI,uBAC9BM,EAD8B,EAC9BA,KAD8B,kBAM/BA,GAN+B,2CAApB,uDAQtB+D,QAAQC,IAAIH,GAAeI,MAAK,SAAAjE,GAC5B4D,EAAc5D,MAGlB,IAAMkE,EAAehE,EAAKuD,UAAUxD,IAAf,uCAAmB,WAAMf,GAAN,iBAAAO,EAAA,sEACbxB,IAAM4B,IAAN,iBAAoBX,GAAM,CAC7CY,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAHE,uBAC5BM,EAD4B,EAC5BA,KAD4B,kBAM7BA,GAN6B,2CAAnB,uDAQrB+D,QAAQC,IAAIE,GAAcD,MAAK,SAAAjE,GAC3B0D,EAAa1D,QAElB,CAACN,EAAMQ,IAEH,sBAAKkC,UAAU,UAAf,UACH,gDACA,sBAAKA,UAAU,eAAf,UACI,2CACCqB,EAAUxC,OAAS,GAChBwC,EAAUxD,KAAI,SAAAC,GAAI,OACd,cAACkD,EAAD,CAAsCP,IAAKxE,EAAQ,WAAO6B,EAAK8C,IAAZ,mBAAkC9D,GAAIgB,EAAK8C,IAAKK,KAAOnD,EAAKpC,SAAUgB,KAAK,YAA/GoB,EAAK8C,IAAM,eAGlC,2CACCW,EAAW1C,OAAS,GACjB0C,EAAW1D,KAAI,SAAAC,GAAI,OACf,cAACkD,EAAD,CAAwCP,IAAKxE,EAAQ,WAAO6B,EAAK8C,IAAZ,mBAAkC9D,GAAIgB,EAAK8C,IAAKK,KAAOnD,EAAKpC,SAAUgB,KAAK,aAAhHoB,EAAK8C,IAAM,sB,4FC5C/C/E,IAAMC,SAASC,QAAUC,4BAGV,SAAS+F,EAAKnH,GACzB,MAAuB6E,qBAAW9D,GAA3BmC,EAAP,EAAOA,KAAK4B,EAAZ,EAAYA,QACZ,EAAgC0B,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAwBb,mBAAS,IAAjC,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAgCf,mBAAS,IAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAA8BjB,oBAAS,GAAvC,mBAAOjF,EAAP,KAAgBmG,EAAhB,KAEMC,EAAU,uCAAG,gCAAAlF,EAAA,yDACTC,EAAQC,aAAaC,QAAQ,SACnC8E,GAAW,IACPF,EAHW,wBAILxE,EAAO,IAAI4E,KACZC,OAAO,cAAcL,GACvBF,GAAMtE,EAAK6E,OAAO,QAAQP,GANlB,kBAQgBrG,IAAMkE,KAAK,SAAUnC,EAAM,CAC9CF,QAAS,CACL,cAAgB,UAAhB,OAA2BJ,MAV5B,OAQDoF,EARC,OAaP9H,EAAM+H,QAAQD,EAAS9E,MACvBuE,EAAQ,IACRF,EAAY,IACZI,EAAY,IAhBL,kDAkBPO,QAAQC,IAAR,MAlBO,QAqBfP,GAAW,GArBI,0DAAH,qDA+ChB,OArBAlF,qBAAU,WACN,IAAME,EAAQC,aAAaC,QAAQ,UACnB,uCAAG,8BAAAH,EAAA,yDACVS,EADU,qBAEPR,EAFO,0CAIoBzB,IAAM4B,IAAI,cAAe,CAC5CC,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAN/B,gBAIKM,EAJL,EAIKA,KAKR8B,EAAQ9B,GATL,kDAWHgF,QAAQC,IAAR,MAXG,0DAAH,qDAgBhBhD,KACD,CAAC/B,EAAK4B,IAGL,qBAAKM,UAAY,OAAjB,SACI,eAAC8C,EAAA,EAAD,CAASC,WAAS,EAAlB,UAEQjF,GACA,qCACI,cAACnD,EAAD,CAAMG,OAAQgD,EAAK8C,IAAKlF,SAAUoC,EAAKpC,SAAUN,QAASa,mCAAiB6B,EAAK8C,IAAM,oBACtF,uBACA,cAACoC,EAAA,EAAD,CACIhD,UAAY,WACZ3D,MAAO+F,EACPa,YAAaC,MAAiB,IAAMpF,EAAKpC,SAASyH,MAAM,KAAK,GAAK,2BAClEC,SAAU,SAAA3E,GAAO4D,EAAY5D,EAAE4E,OAAOhH,aAKlD,uBACA,eAACwE,EAAA,EAAD,CAAQb,UAAU,eAAesD,UAAQ,EAAzC,UACI,cAACzC,EAAA,EAAO0C,QAAR,CAAgBC,QAAM,EAAtB,SACI,uBACInH,MAAO2F,EACPtF,KAAK,OACLuE,KAAK,cACLnE,GAAG,cACH2G,OAAO,wBACPL,SAAU,SAAA3E,GACNwD,EAAYxD,EAAE4E,OAAOhH,OACrB8F,EAAQ1D,EAAE4E,OAAOK,MAAM,SAInC,cAAC7C,EAAA,EAAO0C,QAAR,CAAgBI,SAAO,EAAvB,SACI,cAACC,EAAA,EAAD,CAAM3C,KAAK,eAGnB,cAACJ,EAAA,EAAD,CAAQN,QAASgC,EAAYsB,UAAQ,EAArC,kBAEI1H,GACA,cAAC2H,EAAA,EAAD,CAAQC,QAAM,EAAd,4B,4BC/FL,SAASC,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,SAASlE,EAAO,EAAPA,KACjCjC,EAAQ2B,qBAAW9D,GAAnBmC,KAEP,EAA0BsD,mBAASrB,EAAKmE,MAAMrF,QAA9C,mBAAOqF,EAAP,KAAcC,EAAd,KACA,EAA2B/C,oBAAS,GAApC,mBAAOgD,EAAP,KAAeC,EAAf,KAEMC,EAAU,uCAAG,4BAAAjH,EAAA,6DACTC,EAAQC,aAAaC,QAAQ,SACnC2G,GAAS,SAAAD,GAAK,OAAIE,EAAUF,EAAQ,EAAIA,EAAQ,KAChDG,GAAS,SAAAD,GAAO,OAAKA,KAHN,kBAMLvI,IAAM0I,MAAN,iBAAsBxE,EAAKa,IAA3B,SAAuC,GAAG,CAC5ClD,QAAQ,CACJ,cAAgB,UAAhB,OAA2BJ,MARxB,uDAYXsF,QAAQC,IAAR,MAZW,yDAAH,qDAsBhB,OANAzF,qBAAU,WACN,IAAIoH,EAAQ,EACR1G,IAAM0G,EAAQzE,EAAKmE,MAAMO,SAAS3G,EAAK8C,MAC3CyD,EAASG,KACX,CAAC1G,EAAMiC,IAGL,eAAC+C,EAAA,EAAD,CAAS5C,MAAM,OAAf,UACI,sBAAMF,UAAY,WAAlB,SACI,eAAC0E,EAAA,EAAKC,MAAN,WACA,cAAC5J,EAAA,EAAD,CAAOG,KAAK,OAAOC,IAAK8I,EAASW,eAAgBvJ,QAAM,IACnD,sBAAML,MAAO,CACTM,WAAY,MACZC,SAAU,OACVC,WAAY,OACZC,cAAc,UAJlB,SAMA,mBAAGZ,KAAI,sBAAiBoJ,EAASnH,IAAjC,SAAwCmH,EAASvI,aAGjD,+BAAQqE,EAAK8E,iBAKrB,eAACH,EAAA,EAAKnB,QAAN,WACI,cAACmB,EAAA,EAAKI,MAAN,CAAY9E,UAAY,cAAc+E,MAAI,EAA1C,SACShF,EAAKiF,cAEd,cAACN,EAAA,EAAKI,MAAN,CAAYG,QAAM,EAAlB,SACI,qBAAKjF,UAAU,YAAYQ,IAAI,GAAGrF,IAAK4E,EAAK/B,UAEhD,qBAAKgC,UAAU,OAAf,SACI,eAACa,EAAA,EAAD,CAAQqE,GAAG,MAAMC,cAAc,QAA/B,UACI,cAACtE,EAAA,EAAD,CAASX,MAAQkE,EAAU,OAAS,OAAQ7D,QAAS+D,EAAYc,MAAI,EAArE,SACKhB,EACK,yCAAG,cAACR,EAAA,EAAD,CAAM3C,KAAK,cAAd,YACA,yCAAG,cAAC2C,EAAA,EAAD,CAAM3C,KAAK,sBAAd,aAIV,eAACoE,EAAA,EAAD,CAAOvE,OAAK,EAAZ,UACKoD,EADL,uBAlExBrI,IAAMC,SAASC,QAAUC,4B,sBCGV,SAAS0I,EAAK9J,GACzB,MAA0BwG,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAA8BnE,oBAAS,GAAvC,mBAAOjF,EAAP,KAAgBmG,EAAhB,KAEMK,EAAO,uCAAG,WAAO5C,GAAP,qBAAA1C,EAAA,6DACNC,EAAQC,aAAaC,QAAQ,SADvB,SAEW3B,IAAM4B,IAAN,iBAAoBsC,EAAKjF,QAAU,CACtD4C,QAAS,CACL,cAAgB,UAAhB,OAA2BJ,MAJvB,gBAEJM,EAFI,EAEJA,KAMF4H,EARM,2BASLzF,GATK,IAURjC,KAAMF,IAEV2H,GAAS,SAAAD,GAAK,OAAKE,GAAL,mBAAiBF,OAZnB,2CAAH,sDAiDb,OAJAlI,qBAAU,WA7BN,sBAAC,gCAAAC,EAAA,6DACSC,EAAQC,aAAaC,QAAQ,SADtC,SAEuB3B,IAAM4B,IAAI,cAAe,CACzCC,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAJrC,gBAQGM,GANMA,EAFT,EAESA,MAMMC,IAAL,uCAAS,WAAMkC,GAAN,iBAAA1C,EAAA,sEACSxB,IAAM4B,IAAN,iBAAoBsC,EAAKjF,QAAU,CACxD4C,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAHlB,uBACLM,EADK,EACLA,KADK,6CAQLmC,GARK,IASRjC,KAAKF,KATG,2CAAT,uDAaP+D,QAAQC,IAAIhE,GAAMiE,MAAK,SAAAjE,GACnB2H,EAAS3H,GACT0E,GAAW,MAvBlB,0CAAD,KA+BF,IAEK,sBAAKtC,UAAU,OAAf,UACH,cAAC+B,EAAD,CAAMY,QAAUA,IAEZxG,EACI,cAAC2H,EAAA,EAAD,CAAQC,QAAM,EAAd,2BAEAuB,EAAMzG,OAAS,EACXyG,EAAMzH,KAAI,SAAAkC,GAAI,OACV,cAACiE,EAAD,CAEIC,SAAU,CACNnH,GAAGiD,EAAKjC,KAAK8C,IACblF,SAAUqE,EAAKjC,KAAKpC,SACpBkJ,eAAgB5I,mCAA2C+D,EAAKjF,OAAQ,mBAE5EiF,KAAI,2BACGA,GADH,IAEAmE,MAAOnE,EAAKmE,MACZlG,MAAOhC,mCAA4C+D,EAAKa,IAAM,SAC9DiE,UAAWY,IAAa,IAAIC,KAAK3F,EAAK8E,eAVrC9E,EAAKa,QAcpB,iF,OC1ElB/E,IAAMC,SAASC,QAAUC,4BACzB,IAAMsB,EAAQC,aAAaC,QAAQ,SAInC,SAASmI,IACP,IAAyC,OAApCC,SAASC,YAAY,eAAsB,EAChD,MAAMpH,GAAI,OAAO,GAGJ,SAASqH,IACpB,MAAuBrG,qBAAW9D,GAA3BmC,EAAP,EAAOA,KAAK4B,EAAZ,EAAYA,QACNxC,EAAUC,cA4BhB,OAxBAC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,yDACdS,EADc,qBAEXR,EAFW,0CAIgBzB,IAAM4B,IAAI,cAAe,CAC5CC,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAN3B,gBAICM,EAJD,EAICA,KAKR8B,EAAQ9B,GATD,kDAWPL,aAAaoC,WAAW,SACxBzC,EAAQ0C,KAAK,UAZN,gCAeX1C,EAAQ0C,KAAK,UAfF,0DAAH,qDAoBhBC,KACD,CAAC3C,EAAQwC,EAAQ5B,IAEb,gCACDA,GAAQ,cAAC0B,EAAD,CAAQpE,QAASa,mCAAiB6B,EAAK8C,IAAM,oBACvD,sBAAKZ,UAAU,WAAf,UACK2F,GAAe7H,GAAQ,cAACqD,EAAD,CAASrD,KAAOA,IACxC,cAAC,EAAD,IACE6H,GAAe,cAAC,EAAD,U,+BC/CvBrI,GAAQC,aAAaC,QAAQ,SAGpB,SAASuI,GAAMnL,GAC1B,IAAMsC,EAAUC,cAEhB,EAAoCiE,oBAAS,GAA7C,mBAAO4E,EAAP,KAAmBC,EAAnB,KACA,EAAyC7E,oBAAS,GAAlD,mBAAO8E,EAAP,KAAqBC,EAArB,KAEA,EAAoC/E,oBAAS,GAA7C,mBAAOgF,EAAP,KAAmBC,EAAnB,KACA,EAA6BjF,oBAAS,GAAtC,mBAAOjF,EAAP,KAAemG,EAAf,KAEQ5C,EAAYD,qBAAW9D,GAAvB+D,QAER,EAAoC0B,mBAAS,CACzCkF,MAAO,GACPC,SAAS,KAFb,mBAAOC,EAAP,KAAmBC,EAAnB,KAKArJ,qBAAU,WAWN,OAVIE,IACAzB,IAAM4B,IAAI,cAAe,CACrBC,QAAS,CACL,cAAgB,UAAhB,OAA2BJ,OAEhCuE,MAAK,SAAAjE,GACJV,EAAQ0C,KAAK,QAId,eAGT,CAAC1C,IAEH,IAAMwJ,EAAmB,SAACjI,GACtBgI,GAAc,SAAAE,GAAa,kCACpBA,GADoB,kBAEtBlI,EAAE4E,OAAOpC,KAAQxC,EAAE4E,OAAOhH,WAE/B4J,EAAcO,EAAWF,MAAMzH,OAAS,GACxCsH,EAAiBK,EAAWD,SAAS1H,OAAS,IAG5C0D,EAAU,uCAAG,WAAO9D,GAAP,iBAAApB,EAAA,6DACfoB,EAAEmI,iBACFP,GAAc,GACd/D,GAAW,GAHI,kBAKYzG,IAAMkE,KAAK,cAAeyG,GALtC,gBAKH5I,EALG,EAKHA,KACRL,aAAasJ,QAAQ,QAASjJ,EAAKN,OACnCoC,EAAQ9B,EAAKE,MACbZ,EAAQ0C,KAAK,KARF,kDAUXyG,GAAc,GAVH,QAYf/D,GAAW,GAZI,0DAAH,sDAgBhB,OACI,qBAAKtC,UAAU,iBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,eAAC8C,EAAA,EAAD,WACI,sBAAK9C,UAAU,OAAf,UACI,+BAAI,qBAAKQ,IAAI,IAAIrF,IAAK2L,EAAMpG,OAAO,KAAKC,MAAM,OAA9C,YACA,0CAGJ,eAACoG,GAAA,EAAD,CAAMC,SAAUzE,EAAhB,UACI,eAACwE,GAAA,EAAKE,MAAN,WACI,0CACA,uBACIhG,KAAK,QACLgC,YAAY,QACZ5G,MAAOmK,EAAWF,MAClBlD,SAAUsD,KAEZV,GAAe,cAACX,EAAA,EAAD,CAAOnF,MAAM,MAAMgH,UAAQ,EAA3B,uCAErB,eAACH,GAAA,EAAKE,MAAN,WACI,6CACA,uBACIhG,KAAK,WACLvE,KAAK,WACLuG,YAAY,WACZ5G,MAAOmK,EAAWD,SAClBnD,SAAUsD,KAEZR,GAAiB,cAACb,EAAA,EAAD,CAAOnF,MAAM,MAAMgH,UAAQ,EAA3B,uCACjBd,GAAc,cAACf,EAAA,EAAD,CAAOnF,MAAM,MAAMgH,UAAQ,EAACpG,OAAK,EAAjC,6CAEpB,mBAAGjG,KAAK,SAAR,2CAAkD,uBAAK,uBACvD,cAACgG,EAAA,EAAD,CAAQgD,UAAQ,EAACnH,KAAK,SAAtB,sBAEHP,GAAW,cAAC2H,EAAA,EAAD,CAAQC,QAAM,EAACoD,OAAO,WAAtB,kCA9FhCtL,IAAMC,SAASC,QAAQC,4B,gCCAR,SAASoL,KACpB,IAAMlK,EAAUC,cAEhB,EAA6BiE,oBAAS,GAAtC,mBAAOjF,EAAP,KAAemG,EAAf,KAEA,EAAoClB,mBAAS,CACzCiG,eAAe,EACfrB,YAAY,EACZsB,gBAAgB,EAChBC,eAAe,IAJnB,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,EAAqCrG,oBAAS,GAA9C,mBAAOsG,EAAP,KAAmBC,EAAnB,KAEA,EAAoCvG,mBAAS,CACzCwG,SAAU,GACVtB,MAAO,GACPC,SAAU,GACVsB,gBAAgB,KAJpB,mBAAOrB,EAAP,KAAmBC,EAAnB,KAOMqB,EAAe,SAAArJ,GACjBgI,EAAc,2BACPD,GADM,kBAER/H,EAAE4E,OAAOpC,KAAQxC,EAAE4E,OAAOhH,UAK7B0L,EAAM,uCAAG,kCAAA1K,EAAA,yDACXiF,GAAW,GACXqF,GAAe,GAETN,EAAgBb,EAAWoB,SAAS/I,OACpCmH,EAAagC,KAAUC,QAAQzB,EAAWF,OAC1CiB,EAAiBf,EAAWD,WAAaC,EAAWqB,gBACpDP,EAAkBd,EAAWD,SAAS1H,OAAS,EAErD4I,EAAc,CACVJ,gBACArB,aACAsB,iBACAC,oBAGAF,GAAiBrB,GAAcsB,GAAkBC,GAhB1C,wBAiBP3E,QAAQC,IAAI2D,GAjBL,mBAmBG3K,IAAMkE,KAAK,iBAAkB,CAC/BrE,SAAU8K,EAAWoB,SACrBtB,MAAOE,EAAWF,MAClBC,SAAUC,EAAWD,WAtBtB,QAwBHrJ,EAAQ0C,KAAK,UACbsI,MAAM,mCAzBH,kDA2BHP,GAAe,GA3BZ,QA8BPrF,GAAW,GA9BJ,QAgCPA,GAAW,GAhCJ,0DAAH,qDAoCR,OACA,qBAAKtC,UAAU,kBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,eAAC8C,EAAA,EAAD,WACI,sBAAK9C,UAAU,OAAf,UACI,mCAAK,qBAAKQ,IAAI,IAAIrF,IAAKsF,EAAKC,OAAO,KAAKC,MAAM,OAA9C,YACA,2CAGJ,eAACoG,GAAA,EAAD,CAAMC,SAAUe,EAAhB,UACI,eAAChB,GAAA,EAAKE,MAAN,WACI,8CACI,uBAAOhG,KAAK,WAAW5E,MAAOmK,EAAWoB,SAAUxE,SAAU0E,EAAc7E,YAAY,cACrFuE,EAAWH,cAA2E,KAA3D,cAAChC,EAAA,EAAD,CAAOnF,MAAM,MAAMgH,UAAQ,EAA3B,qCAErC,eAACH,GAAA,EAAKE,MAAN,WACI,0CACI,uBAAOhG,KAAK,QAAQ5E,MAAOmK,EAAWF,MAAOlD,SAAU0E,EAAc7E,YAAY,UAC/EuE,EAAWxB,WAA+E,KAAlE,cAACX,EAAA,EAAD,CAAOnF,MAAM,MAAMgH,UAAQ,EAA3B,yCACxBQ,EAAoF,KAAtE,cAACrC,EAAA,EAAD,CAAOnF,MAAM,MAAMgH,UAAQ,EAA3B,gDAExB,eAACH,GAAA,EAAKE,MAAN,WACI,6CACI,uBAAOhG,KAAK,WAAW5E,MAAOmK,EAAWD,SAAUnD,SAAU0E,EAAcpL,KAAK,WAAWuG,YAAY,aACtGuE,EAAWF,eAA4F,KAA3E,cAACjC,EAAA,EAAD,CAAQnF,MAAM,MAAMgH,UAAQ,EAA5B,oDAErC,eAACH,GAAA,EAAKE,MAAN,WACI,qDACI,uBAAOhG,KAAK,kBAAkB5E,MAAOmK,EAAWqB,gBAAiBzE,SAAU0E,EAAcpL,KAAK,WAAWuG,YAAY,qBAClHuE,EAAWD,cAA+E,KAA/D,cAAClC,EAAA,EAAD,CAAQnF,MAAM,MAAMgH,UAAQ,EAA5B,wCAErC,mBAAGrM,KAAK,QAAR,4CAAkD,uBAAK,uBACxD,cAACgG,EAAA,EAAD,CAAQgD,UAAQ,EAACnH,KAAK,SAAtB,oBACCP,GAAW,cAAC2H,EAAA,EAAD,CAAQC,QAAM,EAACoD,OAAO,WAAtB,qCApGpCtL,IAAMC,SAASC,QAAUC,4B,OCJV,SAASmM,GAAT,GAAiC,IAAVrN,EAAS,EAATA,OAC5BsN,EAAUpM,mCAA4ClB,EAAS,kBAC/DuN,EAAQrM,mCAA4ClB,EAAS,gBAMnE,OAJAsC,qBAAU,cAER,IAGE,sBAAK4C,UAAU,oBAAf,UACI,qBAAKA,UAAY,UAAUQ,IAAK,GAAGrF,IAAOiN,IAC1C,qBAAKpI,UAAU,QAAQQ,IAAK,GAAGrF,IAAOkN,O,OCNnC,SAASC,GAAY1N,GAChC,MAA8BwG,oBAAS,GAAvC,mBAAOjF,EAAP,KAAgBmG,EAAhB,KACA,EAA0B7C,qBAAW9D,GAA7BmC,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,QACd,EAAoC0B,mBAAS,CACzC1F,SAAU,GACVsJ,YAAa,GACbuD,mBAAoB,GACpBC,iBAAkB,GAClB5D,eAAgB,GAChB6D,aAAc,KANlB,mBAAOjC,EAAP,KAAmBC,EAAnB,KASMlE,EAAU,uCAAG,gDAAAlF,EAAA,6DACfiF,GAAW,GACLhF,EAAQC,aAAaC,QAAQ,SAC3B9B,EAAwD8K,EAAxD9K,SAAUsJ,EAA8CwB,EAA9CxB,YAAaJ,EAAiC4B,EAAjC5B,eAAgB6D,EAAiBjC,EAAjBiC,aAHhC,SAKPC,EAAc,GALP,SAMa7M,IAAM0I,MAAM,cAAe,CAC/C7I,WAAUsJ,eACX,CACCtH,QAAS,CACL,cAAgB,UAAhB,OAA2BJ,MAVxB,UAMLqL,EANK,OAaXD,EAAcC,EAAU/K,MAEpBgH,EAfO,wBAgBDgE,EAAc,IAAIpG,KACZC,OAAO,QAASmC,GAjBrB,UAkBoB/I,IAAMkE,KAAK,wBAAyB6I,EAAa,CACxElL,QAAS,CACL,cAAgB,UAAhB,OAA2BJ,MApB5B,QAkBDuL,EAlBC,OAuBPH,EAAcG,EAAajL,KAvBpB,YA0BP6K,EA1BO,wBA2BDK,EAAY,IAAItG,KACZC,OAAO,QAASgG,GA5BnB,UA6BkB5M,IAAMkE,KAAK,sBAAuB+I,EAAW,CAClEpL,QAAS,CACL,cAAgB,UAAhB,OAA2BJ,MA/B5B,QA6BDyL,EA7BC,OAkCPL,EAAcK,EAAWnL,KAlClB,QAoCX0E,GAAW,GACX5C,EAAQgJ,GACR9N,EAAMoO,OACNpM,OAAOC,SAASoM,SAvCL,kDAyCXf,MAAM,KAAIgB,SAzCC,0DAAH,qDAwDhB,OAXA9L,qBAAU,WACNU,GAAQ2I,EAAc,CAClB/K,SAAUoC,EAAKpC,SACfsJ,YAAalH,EAAKkH,YAClBuD,mBAAoB,GACpBC,iBAAkB,GAClB5D,eAAgB,GAChB6D,aAAc,OAEpB,CAAC3K,IAGC,qBAAKkC,UAAU,cAAf,SACI,eAAC8C,EAAA,EAAD,WACI,eAACiE,GAAA,EAAD,CAAMC,SAAUzE,EAAhB,UACQ,eAACwE,GAAA,EAAKE,MAAN,WACI,8CACA,uBACIkC,UAAQ,EACRlI,KAAK,WACLgC,YAAY,YACZ5G,MAAOmK,EAAW9K,SAClB0H,SAAU,SAAA3E,GACNgI,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpB9K,SAAU+C,EAAE4E,OAAOhH,iBAKnC,eAAC0K,GAAA,EAAKE,MAAN,WACI,gDACJ,uBACIkC,UAAQ,EACJlI,KAAK,cACLgC,YAAY,MACZ5G,MAAOmK,EAAWxB,YAClB5B,SAAU,SAAA3E,GACNgI,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpBxB,YAAavG,EAAE4E,OAAOhH,iBAKtC,eAAC0K,GAAA,EAAKE,MAAN,WACI,2DACA,uBACI5K,MAAOmK,EAAW+B,mBAClB7L,KAAK,OACLuE,KAAK,gBACLnE,GAAG,gBACH2G,OAAO,wBACPL,SAAU,SAAA3E,GACNgI,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpB+B,mBAAoB9J,EAAE4E,OAAOhH,WAEjCoK,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpB5B,eAAgBnG,EAAE4E,OAAOK,MAAM,cAKnD,eAACqD,GAAA,EAAKE,MAAN,WACQ,yDACA,uBACI5K,MAAOmK,EAAWgC,iBAClB9L,KAAK,OACLuE,KAAK,cACLnE,GAAG,cACH2G,OAAO,wBACPL,SAAU,SAAA3E,GACNgI,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpBgC,iBAAkB/J,EAAE4E,OAAOhH,WAE/BoK,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpBiC,aAAchK,EAAE4E,OAAOK,MAAM,cAKjD,cAAC7C,EAAA,EAAD,CAAQX,MAAM,WAAWxD,KAAK,SAA9B,0BACA,cAACmE,EAAA,EAAD,CAAQN,QAAS,WACb3F,EAAMoO,QADV,uBAIH7M,GAAW,cAAC2H,EAAA,EAAD,CAAQ9I,MAAO,CAACM,WAAY,MAAOL,UAAU,MAAOkM,QAAM,EAACpD,QAAM,EAAjE,mCAtJ5BlI,IAAMC,SAASC,QAAUC,4B,wBCMnBC,GAAWD,kCAGF,SAAS8J,KACpB,MAAuBrG,qBAAW9D,GAA3BmC,EAAP,EAAOA,KAAK4B,EAAZ,EAAYA,QACNxC,EAAUC,cAChB,EAA0BiE,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAAsCnE,mBAAS,MAA/C,mBAAOgI,EAAP,KAAoBC,EAApB,KACA,EAA6BjI,oBAAS,GAAtC,mBAAOjF,EAAP,KAAemG,EAAf,KACA,EAAkClB,oBAAS,GAA3C,mBAAOM,EAAP,KAAkB4H,EAAlB,KACA,EAAsElI,oBAAS,GAA/E,mBAAOmI,EAAP,KAAoCC,EAApC,KAkBMC,EAAU,uCAAG,WAAO3M,EAAGQ,GAAV,iBAAAD,EAAA,+EAEOxB,IAAM4B,IAAN,qBAAwBX,GAAM,CAC5CY,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAJvB,OAELoM,EAFK,OAQLC,EAASD,EAAI9L,KAAKgM,UACxBrE,EAASoE,GACTrH,GAAW,GAVA,gDAYXM,QAAQC,IAAR,MACAP,GAAW,GAbA,yDAAH,wDAgEhB,OA9CAlF,qBAAU,WACN,IAAMyC,EAAU,uCAAG,WAAO/C,GAAP,mBAAAO,EAAA,yDACbC,EAAQC,aAAaC,QAAQ,SAC9BM,EAFc,qBAGXR,EAHW,0CAKgBzB,IAAM4B,IAAI,cAAe,CAC5CC,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAP3B,gBAKCM,EALD,EAKCA,KAKR8B,EAAQ9B,GACR0L,IAAe1L,EAAK8D,UAAUmI,MAAK,SAAA/L,GAAI,OAAIA,IAAOhB,MAClD2M,EAAW3M,EAAGQ,GAZP,kDAcPC,aAAaoC,WAAW,SACxBzC,EAAQ0C,KAAK,UAfN,gCAkBX1C,EAAQ0C,KAAK,UAlBF,0DAAH,sDAuBhB0C,GAAW,GACI,uCAAG,kCAAAjF,EAAA,6DACRC,EAAQC,aAAaC,QAAQ,SAC7BsM,EAAS,IAAIC,gBAAgBnN,OAAOC,SAASmN,QAC7ClN,EAAKmN,OAAOC,YAAYJ,EAAOK,WAAWrN,GAHlC,kBAKQjB,IAAM4B,IAAN,iBAAoBX,GAAM,CAChCY,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAPhC,OAKJoM,EALI,OAUV7J,EAAW/C,GACXuM,EAAeK,EAAI9L,MAXT,kDAaViC,EAAW/C,GACXuM,EAAe,QAdL,QAgBf/G,GAAW,GAhBI,0DAAH,oDAkBf8H,KACD,CAAClN,EAAQwC,EAAQ5B,IAEG,SAAhBsL,EACH,gCACKtL,GAAQ,cAAC0B,EAAD,CAAQpE,QAASa,GAAW,IAAM6B,EAAK8C,IAAM,oBACtD,kEAEF,sBAAKZ,UAAU,eAAf,UACGlC,GAAQ,cAAC0B,EAAD,CAAQpE,QAASa,GAAW,IAAM6B,EAAK8C,IAAM,oBACtD,cAACuH,GAAD,CAAcrN,OAAQsO,GAAeA,EAAYxI,MAEjD,sBAAKZ,UAAU,cAAf,UACI,6BAAKoJ,GAAeA,EAAY1N,WAChC,4BAAI0N,GAAeA,EAAYpE,cAC/B,qBAAKhF,UAAU,QAAf,SACI,eAACqK,GAAA,EAAUC,MAAX,CAAiBpP,KAAK,OAAOgF,MAAM,OAAnC,UACI,eAACmK,GAAA,EAAD,WACI,cAACA,GAAA,EAAUE,MAAX,UAAkBnB,GAAgBA,EAAY/H,UAAUxC,SACxD,cAACwL,GAAA,EAAUhF,MAAX,2BAEJ,eAACgF,GAAA,EAAD,WACI,cAACA,GAAA,EAAUE,MAAX,UAAmBnB,GAAeA,EAAY1H,UAAU7C,SACxD,cAACwL,GAAA,EAAUhF,MAAX,iCAKP+D,GAAeA,EAAYxI,QAAU9C,GAAQA,EAAK8C,KAC/C,cAACC,EAAA,EAAD,CACIb,UAAU,eACVE,MAAOwB,EAAY,OAAS,UAC5BnB,QA5GH,WACjB,IAAMjD,EAAQC,aAAaC,QAAQ,SAC7Bf,EAASiF,EAAY,WAAa,SAExC7F,IAAM0I,MAAN,iBAAsB6E,EAAYxI,IAAlC,YAAyCnE,GAAU,GAAI,CACnDiB,QAAS,CACL,cAAgB,UAAhB,OAA0BJ,MAGlCgM,GAAa,SAAA5H,GAAS,OAAKA,MAgGX,SAKKA,EAAY,WAAa,WAE9B,sCACM6H,GACE,cAAC1I,EAAA,EAAD,CACIb,UAAU,eACVO,QAAS,WACLiJ,GAA+B,IAHvC,0BAQHD,GAA+B,cAACjB,GAAD,CAAaU,KAAM,WAAOQ,GAA+B,SAGrG,uBAAK,uBACJrN,EACG,cAACqO,GAAA,EAAD,CAAQzG,QAAM,EAAd,SACI,cAACD,EAAA,EAAD,CAAQC,QAAM,EAAd,6BAIJuB,EAAMzG,OAAS,EACXuK,GAAe9D,GAASA,EAAMzH,KAAI,SAAAkC,GAAI,OAAI,cAACiE,EAAD,CAE1CC,SAAU,CACNvI,SAAU0N,EAAY1N,SACtBkJ,eAAgB5I,mCAA2CoN,EAAYxI,IAAK,mBAEhFb,KAAI,2BACGA,GADH,IAEQmE,MAAOnE,EAAKmE,MACZlG,MAAOhC,mCAA4C+D,EAAKa,IAAM,SAC9DiE,UAAWY,IAAa,IAAIC,KAAK3F,EAAK8E,eAT7C9E,EAAKa,QAYZ,+DA9JtB/E,IAAMC,SAASC,QAAUC,4B,aCuBVyO,OA1Bf,WACI,MAAwBrJ,mBAAS3B,qBAAW9D,IAA5C,mBAAOmC,EAAP,KAAa4B,EAAb,KACMgL,EAAeC,mBAAQ,iBAAO,CAAE7M,OAAM4B,aAAY,CAAC5B,EAAM4B,IAE/D,OACI,cAAC,KAAD,UACI,cAAC/D,EAAYiP,SAAb,CAAsBvO,MAAOqO,EAA7B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAlB,SACI,cAAChF,EAAD,MAEJ,cAAC,IAAD,CAAOgF,KAAK,SAAZ,SACI,cAAC/E,GAAD,MAEJ,cAAC,IAAD,CAAO+E,KAAK,UAAZ,SACI,cAAC1D,GAAD,MAEJ,cAAC,IAAD,CAAO0D,KAAK,WAAZ,SACI,cAAC,GAAD,c,OCtBxBC,IAASC,OACL,cAAC,GAAD,IACApF,SAASqF,eAAe,W","file":"static/js/main.903633b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.b3b70c15.png\";","import {Image} from 'semantic-ui-react'\r\n\r\nexport default function User(props) {\r\n\r\n    return (\r\n            <span>\r\n                <a\r\n                    href={`/profile/?id=${props.userId}`}\r\n                >\r\n                    <Image style={{marginTop:'2px'}} size='mini' src={props.userImg} avatar />\r\n                </a>\r\n                <span style={{\r\n                    marginLeft: '9px',\r\n                    fontSize: '20px',\r\n                    fontWeight: 'bold',\r\n                    verticalAlign:'middle',\r\n                }}>\r\n                    {props.username}\r\n                </span>\r\n            </span>\r\n    )\r\n}\r\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext(null)\n","import React, { useEffect } from 'react'\nimport _ from 'lodash'\nimport { Search} from 'semantic-ui-react'\nimport axios from 'axios'\nimport '../styles/searchUser.scss'\nimport { useHistory } from 'react-router-dom'\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\nconst imageURL = process.env.REACT_APP_API_URL + '/users/'\n\nconst initialState = {\n    loading: false,\n    results: [],\n    value: '',\n}\n\nlet users = []\n\nfunction searchReducer(state, action) {\n    switch (action.type) {\n        case 'CLEAN_QUERY':\n            return initialState\n        case 'START_SEARCH':\n            return { ...state, loading: true, value: action.query }\n        case 'FINISH_SEARCH':\n            return { ...state, loading: false, results: action.results }\n        case 'UPDATE_SELECTION':\n            window.location= './profile?id=' + action.id\n            return { ...state, value: action.selection }\n        default:\n            throw new Error()\n    }\n}\n\nexport default function SearchUser() {\n    const history = useHistory()\n    \n    useEffect(() => {\n        async function getUsers() {\n            const token = localStorage.getItem('token')\n            const responseUsers = await axios.get('/users/all', {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            users = responseUsers.data.map(user => ({\n                id:user.id,\n                title: user.username,\n                image: imageURL + user.id + '/profilePicture'\n            }))\n        }\n        \n        getUsers()\n    },[])\n\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\n    const { loading, results, value } = state\n\n    const timeoutRef = React.useRef()\n    const handleSearchChange = React.useCallback((e, data) => {\n        clearTimeout(timeoutRef.current)\n        dispatch({ type: 'START_SEARCH', query: data.value })\n\n        timeoutRef.current = setTimeout(() => {\n            if (data.value.length === 0) {\n                dispatch({ type: 'CLEAN_QUERY' })\n                return\n            }\n\n            const re = new RegExp(_.escapeRegExp(data.value), 'i')\n            const isMatch = (result) => re.test(result.title)\n\n            dispatch({\n                type: 'FINISH_SEARCH',\n                results: _.filter(users, isMatch),\n            })\n        }, 300)\n    }, [])\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(timeoutRef.current)\n        }\n    }, [])\n\n    return <Search\n        loading={loading}\n        onResultSelect={(e, data) =>\n            dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title, id:data.result.id, history })\n        }\n        onSearchChange={handleSearchChange}\n        results={results}\n        value={value}\n    />\n}\n","import { Button} from 'semantic-ui-react'\r\nimport '../styles/topbar.scss'\r\nimport img from '../icons/icon.png'\r\nimport User from './User'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useContext, useEffect } from 'react'\r\nimport { UserContext } from '../../userContext'\r\nimport SearchUser from './SearchUser'\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\nexport default function Topbar(props) {\r\n    const history = useHistory()\r\n    const {user,setUser} = useContext(UserContext)\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const verifyUser = async () => {\r\n        const token = localStorage.getItem('token')\r\n        if (!user) {\r\n            if (token) {\r\n                try {\r\n                    const { data } = await axios.get('/users/self', {\r\n                        headers: {\r\n                            'Authorization':`Bearer ${token}`\r\n                        }\r\n                    })\r\n                    setUser(data)\r\n                } catch (err) {\r\n                    localStorage.removeItem('token')\r\n                    history.push('/login')\r\n                }\r\n            } else {\r\n                history.push('/login')\r\n            }\r\n        }\r\n    }\r\n        \r\n        verifyUser()\r\n    }, [history,setUser,user])\r\n\r\n\r\n    const logout = async () => {\r\n        const token = localStorage.getItem('token')\r\n        await axios.post('/auth/logout', {},{\r\n            headers: {\r\n                'Authorization':`Bearer ${token}`\r\n            }\r\n        })\r\n        window.location = \"/login\"\r\n        localStorage.removeItem('token')\r\n    }\r\n    \r\n    return <div className=\"container\">\r\n        <div className=\"topbarLeft\">\r\n            <SearchUser/>\r\n        </div>\r\n        <div className=\"topbarCenter\">\r\n            <div className='logo'>\r\n                <button\r\n                    style={{\r\n                    background: 'none',\r\n                    color: 'inherit',\r\n                    border: 'none',\r\n                    font: 'inherit',\r\n                    cursor: 'pointer',\r\n                    outline: 'inherit',\r\n                }}\r\n                    onClick={()=>{history.push('/')}}\r\n                    \r\n                >\r\n                    <h1> <img alt=\"V\" src={img} height='33' width='33'></img>Social</h1>\r\n                </button>\r\n            </div>\r\n         </div>\r\n         <div className=\"topbarRight\">\r\n            <User userId={user._id} userImg={props.userImg} />\r\n            <Button basic color='green' onClick={logout}>Logout</Button>\r\n        </div>\r\n    </div>\r\n}","import '../../styles/rightbar.scss'\n\nexport default function RightBar() {\n    return <div className=\"rightbar\">\n        <h2>Notifications</h2>\n    </div>       \n}","export default function Follower(props) {\n    return (\n        <div className=\"follower\">\n            <a href={`/profile?id=${props.id}`}>\n                <img alt='' src={props.img} />\n                <span>{props.name}</span>\n            </a>\n            <label\n                style={{\n                backgroundColor: props.type === 'Follower' ? 'darkgreen' : 'limegreen'\n                }}\n            >{props.type}</label>\n        </div>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport '../../styles/leftbar.scss'\nimport Follower from './Follower'\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\nconst imageURL = process.env.REACT_APP_API_URL + '/users'\n\nexport default function Leftbar({user}) {\n    const [followers, setFollowers] = useState([])\n    const [followings, setFollowings] = useState([])\n    const token = localStorage.getItem('token')\n    \n\n    useEffect(() => {\n        const followingList = user.following.map( async id => {\n            const { data } = await axios.get(`/users/${id}`, {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            return data\n        })\n        Promise.all(followingList).then(data => {\n            setFollowings(data)\n        })\n        \n        const followerList = user.followers.map(async id => {\n            const { data } = await axios.get(`/users/${id}`, {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            return data\n        })\n        Promise.all(followerList).then(data => {\n            setFollowers(data)\n        })\n    }, [token,user])\n\n    return <div className=\"leftbar\">\n        <h2>My Connections</h2>\n        <div className=\"leftbarItems\">\n            <h3>Followers</h3>\n            {followers.length > 0 &&\n                followers.map(user => \n                    <Follower key={user._id + 'follower'} img={imageURL + `/${user._id}/profilePicture`} id={user._id} name={ user.username} type='Follower'/>\n                )\n            }\n            <h3>Following</h3>\n            {followings.length > 0 &&\n                followings.map(user => \n                    <Follower key={ user._id + 'following'} img={imageURL + `/${user._id}/profilePicture`} id={user._id} name={ user.username} type='Following'/>\n                )\n            }\n            </div>\n    </div>       \n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Segment,TextArea,Button,Icon, Loader} from 'semantic-ui-react'\r\nimport { UserContext } from '../../../userContext'\r\nimport User from '../User'\r\nimport axios from 'axios'\r\nimport timeGreeting from 'time-greeting'\r\nimport FormData from 'form-data'\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\nconst imageURL = process.env.REACT_APP_API_URL + '/users'\r\n\r\nexport default function Post(props) {\r\n    const {user,setUser} = useContext(UserContext)\r\n    const [fileName, setFileName] = useState('')\r\n    const [file, setFile] = useState('')\r\n    const [postText, setPostText] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    const submitForm = async () => {\r\n        const token = localStorage.getItem('token')\r\n        setLoading(true)\r\n        if (postText) {\r\n            const data = new FormData()\r\n            data.append('description',postText)\r\n            if(file) data.append('image',file)\r\n            try {\r\n                const response = await axios.post('/posts', data, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                props.addPost(response.data)\r\n                setFile('')\r\n                setFileName('')\r\n                setPostText('')\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        const verifyUser = async () => {\r\n            if (!user) {\r\n                if (token) {\r\n                    try {\r\n                        const { data } = await axios.get('/users/self', {\r\n                            headers: {\r\n                                'Authorization':`Bearer ${token}`\r\n                            }\r\n                        })\r\n                        setUser(data)\r\n                    } catch (err) {\r\n                        console.log(err)\r\n                    }\r\n                } \r\n            }\r\n        }\r\n        verifyUser()\r\n    }, [user,setUser])\r\n\r\n    return (\r\n        <div className = \"post\">\r\n            <Segment secondary >\r\n                {\r\n                    user &&\r\n                    <>\r\n                        <User userId={user._id} username={user.username} userImg={imageURL + '/' + user._id + '/profilePicture'} />\r\n                        <br/>\r\n                        <TextArea\r\n                            className = 'postText'\r\n                            value={postText}\r\n                            placeholder={timeGreeting() + \" \" + user.username.split(\" \")[0] + \", What's on your mind...\"}\r\n                            onChange={e => { setPostText(e.target.value)}}\r\n                        />\r\n                    </>\r\n                }\r\n                \r\n                <br/>\r\n                <Button className='uploadButton' animated>\r\n                    <Button.Content hidden>\r\n                        <input\r\n                            value={fileName}\r\n                            type='file'\r\n                            name='uploadImage'\r\n                            id='uploadImage'\r\n                            accept='image/png, image/jpeg'\r\n                            onChange={e => {\r\n                                setFileName(e.target.value)\r\n                                setFile(e.target.files[0])\r\n                            }}\r\n                        />\r\n                    </Button.Content>\r\n                    <Button.Content visible>\r\n                        <Icon name='photo' />\r\n                    </Button.Content>\r\n                </Button>\r\n                <Button onClick={submitForm} positive>POST</Button>\r\n                {\r\n                    loading &&\r\n                    <Loader active>Posting..</Loader>\r\n                }\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext, useEffect, useState} from 'react'\r\nimport { Feed,Icon,Image,Segment,Button,Label } from 'semantic-ui-react'\r\nimport '../../styles/feedItem.scss'\r\nimport axios from 'axios'\r\nimport { UserContext } from '../../../userContext'\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\n\r\nexport default function FeedItem({ postUser,post}) {\r\n    const {user} = useContext(UserContext)\r\n    \r\n    const [likes, setLikes] = useState(post.likes.length)\r\n    const [isLiked,setLiked] = useState(false)\r\n    \r\n    const handleLike = async () => {\r\n        const token = localStorage.getItem('token')\r\n        setLikes(likes => isLiked ? likes - 1 : likes + 1)\r\n        setLiked(isLiked => !isLiked)\r\n        \r\n        try {\r\n            await axios.patch(`/posts/${post._id}/like`, {},{\r\n                headers:{\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let liked = 0\r\n        if (user) liked = post.likes.includes(user._id)\r\n        setLiked(liked)\r\n    },[user, post])\r\n\r\n    return (\r\n        <Segment color='teal'>\r\n            <span className = 'feedInfo'>\r\n                <Feed.Event>\r\n                <Image size='mini' src={postUser.profilePicture} avatar />\r\n                    <span style={{\r\n                        marginLeft: '9px',\r\n                        fontSize: '20px',\r\n                        fontWeight: 'bold',\r\n                        verticalAlign:'middle',\r\n                    }}>\r\n                    <a href={`profile/?id=${postUser.id}`}>{postUser.username}</a>\r\n                    \r\n                    </span>\r\n                    <span>{ post.createdAt}</span>\r\n        \r\n                </Feed.Event>\r\n                    \r\n            </span>\r\n            <Feed.Content>\r\n                <Feed.Extra className = 'description' text>\r\n                        {post.description}\r\n                </Feed.Extra>\r\n                <Feed.Extra images>\r\n                    <img className='postImage' alt='' src={post.image} />\r\n                </Feed.Extra>\r\n                <div className='like'>\r\n                    <Button as='div' labelPosition='right'>\r\n                        <Button  color={ isLiked ? 'teal' : 'grey'} onClick={handleLike} icon>\r\n                            {isLiked\r\n                                ? <> <Icon name='thumbs up' /> Liked</>\r\n                                : <> <Icon name='thumbs up outline' /> Like</>\r\n                            }\r\n                            \r\n                        </Button>\r\n                        <Label basic >\r\n                            {likes} Likes\r\n                        </Label>\r\n                    </Button>\r\n               </div>\r\n            </Feed.Content>\r\n        </Segment>\r\n    )\r\n}\r\n","import '../../styles/feed.scss'\r\nimport Post from './Post'\r\nimport FeedItem from './FeedItem'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport relativeDate from 'relative-date'\r\nimport { Loader } from 'semantic-ui-react'\r\n\r\nexport default function Feed(props) {\r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const addPost = async (post) => {\r\n        const token = localStorage.getItem('token')\r\n        const { data } = await axios.get(`/users/${post.userId}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n        \r\n        const newPost = {\r\n            ...post,\r\n            user: data\r\n        }\r\n        setPosts(posts => [newPost, ...posts])\r\n    }\r\n\r\n    const loadFeed = () => {\r\n        (async () => {\r\n            const token = localStorage.getItem('token')\r\n            let { data} = await axios.get('/users/feed', {\r\n                headers: {\r\n                    'Authorization':`Bearer ${token}`\r\n                }\r\n            })\r\n            \r\n            data = data.map(async post => {\r\n                const {data} = await axios.get(`/users/${post.userId}`, {\r\n                headers: {\r\n                    'Authorization':`Bearer ${token}`\r\n                }\r\n            })\r\n                \r\n                return {\r\n                    ...post,\r\n                    user:data\r\n                }\r\n            })\r\n            \r\n            Promise.all(data).then(data => {\r\n                setPosts(data)\r\n                setLoading(false)\r\n            })\r\n        })()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadFeed()\r\n    },[])\r\n    \r\n    return <div className=\"feed\">\r\n        <Post addPost={ addPost}/>\r\n        {\r\n            loading ?\r\n                <Loader active>Loading Posts</Loader>\r\n                :\r\n                posts.length > 0 ? \r\n                    posts.map(post => (\r\n                        <FeedItem\r\n                            key={post._id}\r\n                            postUser={{\r\n                                id:post.user._id,\r\n                                username: post.user.username,\r\n                                profilePicture: process.env.REACT_APP_API_URL + '/users/'+ post.userId +'/profilePicture'\r\n                            }}\r\n                            post={{\r\n                                ...post,\r\n                                likes: post.likes,\r\n                                image: process.env.REACT_APP_API_URL + '/posts/' + post._id + '/image',\r\n                                createdAt: relativeDate(new Date(post.createdAt))\r\n                            }}\r\n                        />\r\n                    ))\r\n                : <h5>No Posts to Show. Follow people to see Posts</h5>    \r\n        }\r\n    </div>       \r\n}","import Topbar from '../components/home/Topbar'\r\nimport Rightbar from '../components/home/rightbar/Rightbar'\r\nimport Leftbar from '../components/home/leftbar/Leftbar'\r\nimport Feed from '../components/home/feed/Feed'\r\nimport './styles/home.scss'\r\nimport { useContext, useEffect } from 'react'\r\nimport { UserContext } from '../userContext'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nconst imageURL = process.env.REACT_APP_API_URL + '/users'\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\nconst token = localStorage.getItem('token')\r\n\r\n\r\n\r\nfunction isNotMobile() {\r\n  try{ document.createEvent(\"TouchEvent\"); return false; }\r\n  catch(e){ return true; }\r\n}\r\n\r\nexport default function Home() {\r\n    const {user,setUser} = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const verifyUser = async () => {\r\n        if (!user) {\r\n            if (token) {\r\n                try {\r\n                    const { data } = await axios.get('/users/self', {\r\n                        headers: {\r\n                            'Authorization':`Bearer ${token}`\r\n                        }\r\n                    })\r\n                    setUser(data)\r\n                } catch (err) {\r\n                    localStorage.removeItem('token')\r\n                    history.push('/login')\r\n                }\r\n            } else {\r\n                history.push('/login')\r\n            }\r\n        }\r\n    }\r\n\r\n        verifyUser()\r\n    }, [history,setUser,user])\r\n    \r\n    return <div>\r\n        { user && <Topbar userImg={imageURL + '/' + user._id + '/profilePicture'} />}\r\n        <div className='mainBody'>\r\n            {isNotMobile && user && <Leftbar user={ user}/>}\r\n            <Feed />\r\n            { isNotMobile && <Rightbar/>}\r\n        </div>\r\n    </div>\r\n}","import React, { useContext, useEffect, useState } from 'react'\nimport './styles/login.scss'\nimport { Form,Button ,Segment,Label,Loader} from 'semantic-ui-react'\nimport logo from '../components/icons/icon.png'\nimport axios from 'axios'\nimport { UserContext } from '../userContext'\nimport {useHistory} from 'react-router-dom'\n\nconst token = localStorage.getItem('token')\naxios.defaults.baseURL=process.env.REACT_APP_API_URL\n\nexport default function Login(props) {\n    const history = useHistory()\n\n    const [validEmail, setValidEmail] = useState(true)\n    const [validPassword,setValidPassword] = useState(true)\n    \n    const [validLogin, setValidLogin] = useState(true)\n    const [loading,setLoading] = useState(false)\n\n    const { setUser } = useContext(UserContext)\n\n    const [formValues, setFormValues] = useState({\n        email: '',\n        password:''\n    })\n\n    useEffect(() => {\n        if (token) {\n            axios.get('/users/self', {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            }).then(data => {\n                history.push('/')\n            })\n        }\n\n        return () => {\n            \n        }\n    },[history])\n\n    const handleFormChange = (e) => {\n        setFormValues(currentValues => ({\n            ...currentValues,\n            [e.target.name] : e.target.value\n        }))\n        setValidEmail(formValues.email.length > 0)\n        setValidPassword(formValues.password.length > 0)\n    }\n\n    const submitForm = async (e) => {\n        e.preventDefault()\n        setValidLogin(true)\n        setLoading(true)\n        try {\n            const { data } = await axios.post('/auth/login', formValues)\n            localStorage.setItem('token', data.token)\n            setUser(data.user)\n            history.push('/')\n        } catch (err) {\n            setValidLogin(false)\n        }\n        setLoading(false)\n    }\n        \n    \n    return (\n        <div className='loginContainer'>\n            <div className='loginForm'>\n                <Segment>\n                    <div className='logo'>\n                        <h1><img alt=\"V\" src={logo} height='33' width='33'></img>Social</h1>\n                        <h2>Login</h2>\n                    </div>\n\n                    <Form onSubmit={submitForm}>\n                        <Form.Field>\n                            <label>Email</label>\n                            <input\n                                name='email'\n                                placeholder='Email'\n                                value={formValues.email}\n                                onChange={handleFormChange}\n                            />\n                            {!validEmail &&  <Label color='red' pointing>Please enter an Email!</Label>}\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Password</label>\n                            <input\n                                name='password'\n                                type='password'\n                                placeholder='Password'\n                                value={formValues.password}\n                                onChange={handleFormChange}\n                            />\n                            {!validPassword && <Label color='red' pointing>Please enter a Password!</Label>}\n                            {!validLogin && <Label color='red' pointing basic >Incorrect Email or Password!</Label> }\n                        </Form.Field>\n                        <a href='signup'>Don't have an account? Signup</a><br/><br/>\n                        <Button positive type='submit'>Login</Button>\n                    </Form>\n                    {loading && <Loader active inline='centered'>Logging In...</Loader>}\n                </Segment>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport './styles/signup.scss'\nimport { Form,Button ,Segment, Label, Loader} from 'semantic-ui-react'\nimport img from '../components/icons/icon.png'\nimport validator from 'validator'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\n\nexport default function Signup() {\n    const history = useHistory()\n    \n    const [loading,setLoading] = useState(false)\n\n    const [validation, setValidation] = useState({\n        validUserName: true,\n        validEmail: true,\n        passwordLength: true,\n        passwordMatch: true,\n    })\n\n    const [uniqueEmail,setUniqueEmail] = useState(true)\n    \n    const [formValues, setFormValues] = useState({\n        fullName: '',\n        email: '',\n        password: '',\n        confirmPassword:''\n    })\n        \n    const handleChange = e => {\n        setFormValues({\n            ...formValues,\n            [e.target.name] : e.target.value\n        })\n     \n    }\n\n    const signUp = async () => {\n        setLoading(true)\n        setUniqueEmail(true)\n\n        const validUserName = formValues.fullName.length\n        const validEmail = validator.isEmail(formValues.email)\n        const passwordMatch = (formValues.password === formValues.confirmPassword)\n        const passwordLength =  formValues.password.length > 7 \n        \n        setValidation({\n            validUserName,\n            validEmail,\n            passwordLength,\n            passwordMatch\n        })\n\n        if (validUserName && validEmail && passwordLength && passwordMatch) {\n            console.log(formValues)\n            try {\n                await axios.post('/auth/register', {\n                    username: formValues.fullName,\n                    email: formValues.email,\n                    password: formValues.password\n                })\n                history.push('/login')\n                alert('Account Created! Please Log In.')\n            } catch (err) {\n                setUniqueEmail(false)\n            }\n\n            setLoading(false)\n        } \n            setLoading(false)\n            \n    }\n\n        return (\n        <div className='signupContainer'>\n            <div className='signupForm'>\n                <Segment>\n                    <div className='logo'>\n                        <h1> <img alt=\"V\" src={img} height='33' width='33'></img>Social</h1>\n                        <h2>Signup</h2>\n                    </div>\n\n                    <Form onSubmit={signUp}>\n                        <Form.Field>\n                            <label>Full Name</label>\n                                <input name='fullName' value={formValues.fullName} onChange={handleChange} placeholder='Full Name' />\n                                {!validation.validUserName ? <Label color='red' pointing>Please enter a Name!</Label> : null}\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Email</label>\n                                <input name='email' value={formValues.email} onChange={handleChange} placeholder='Email' />\n                                {!validation.validEmail ? <Label color='red' pointing>Please enter a valid email!</Label> : null}\n                                {!uniqueEmail ? <Label color='red' pointing>Email address is already taken!</Label> : null}\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Password</label>\n                                <input name='password' value={formValues.password} onChange={handleChange} type='password' placeholder='Password' />\n                              { !validation.passwordLength ? <Label  color='red' pointing>Password must be 8 characters long!</Label> : null}\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Confirm Password</label>\n                                <input name='confirmPassword' value={formValues.confirmPassword} onChange={handleChange} type='password' placeholder='Confirm Password' />\n                                { !validation.passwordMatch ? <Label  color='red' pointing>Passwords do not match!</Label> : null}\n                        </Form.Field>\n                         <a href='login'>Already have an account? LogIn</a><br/><br/>\n                        <Button positive type='submit'>Signup</Button>\n                        {loading && <Loader active inline='centered'>Signing Up...</Loader>}\n                    </Form>\n                </Segment>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport '../styles/userPictures.scss'\n\nexport default function UserPictures({userId}) {\n    const profile = process.env.REACT_APP_API_URL + '/users/' + userId + '/profilePicture'\n    const cover = process.env.REACT_APP_API_URL + '/users/' + userId + '/coverPicture'\n    \n    useEffect(() => {\n        \n    },[])\n\n    return (\n        <div className='picturesContainer'>\n            <img className = 'profile' alt ='' src = {profile}></img>\n            <img className='cover' alt ='' src = {cover}></img>\n        </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Segment, Form,Button, Loader } from 'semantic-ui-react'\nimport { UserContext } from '../../userContext'\nimport axios from 'axios'\nimport FormData from 'form-data'\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\n\n\nexport default function EditProfile(props) {\n    const [loading, setLoading] = useState(false)\n    const { user, setUser } = useContext(UserContext)\n    const [formValues, setFormValues] = useState({\n        username: '',\n        description: '',\n        profilePictureName: '',\n        coverPictureName: '',\n        profilePicture: '',\n        coverPicture: ''\n    })\n    \n    const submitForm = async () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        const { username, description, profilePicture, coverPicture } = formValues\n        try {\n            let updatedUser = {}\n            const savedUser = await axios.patch('/users/self', {\n                username, description\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            updatedUser = savedUser.data\n\n            if (profilePicture) {\n                const profileData = new FormData()\n                profileData.append('image', profilePicture)\n                const profileSaved = await axios.post('/users/profilePicture', profileData, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                })          \n                updatedUser = profileSaved.data\n            }\n\n            if (coverPicture) {\n                const coverData = new FormData()\n                coverData.append('image', coverPicture)\n                const coverSaved = await axios.post('/users/coverPicture', coverData, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                })          \n                updatedUser = coverSaved.data\n            }\n            setLoading(false)\n            setUser(updatedUser)\n            props.hide()\n            window.location.reload()\n        } catch (err) {\n            alert(err.message)\n        }\n    }\n\n    useEffect(() => {\n        user && setFormValues({\n            username: user.username,\n            description: user.description,\n            profilePictureName: '',\n            coverPictureName: '',\n            profilePicture: '',\n            coverPicture: ''\n        })\n    },[user])\n    \n    return (\n        <div className='editProfile'>\n            <Segment>\n                <Form onSubmit={submitForm}>\n                        <Form.Field>\n                            <label>Full Name</label>\n                            <input\n                                required\n                                name='username'\n                                placeholder='Full Name'\n                                value={formValues.username}\n                                onChange={e => {\n                                    setFormValues(formValues =>({\n                                        ...formValues,\n                                        username: e.target.value\n                                    }))\n                                }}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Description</label>\n                        <input\n                            required\n                                name='description'\n                                placeholder='Bio'\n                                value={formValues.description}\n                                onChange={e => {\n                                    setFormValues(formValues =>({\n                                        ...formValues,\n                                        description: e.target.value\n                                    }))\n                                }}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Change Profile Picture</label>\n                            <input\n                                value={formValues.profilePictureName}\n                                type='file'\n                                name='uploadProfile'\n                                id='uploadProfile'\n                                accept='image/png, image/jpeg'\n                                onChange={e => {\n                                    setFormValues(formValues => ({\n                                        ...formValues,\n                                        profilePictureName: e.target.value\n                                    }))\n                                    setFormValues(formValues => ({\n                                        ...formValues,\n                                        profilePicture: e.target.files[0]\n                                    }))\n                                }}\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                            <label>Change Cover Picture</label>\n                            <input\n                                value={formValues.coverPictureName}\n                                type='file'\n                                name='uploadCover'\n                                id='uploadCover'\n                                accept='image/png, image/jpeg'\n                                onChange={e => {\n                                    setFormValues(formValues => ({\n                                        ...formValues,\n                                        coverPictureName: e.target.value\n                                    }))\n                                    setFormValues(formValues => ({\n                                        ...formValues,\n                                        coverPicture: e.target.files[0]\n                                    }))\n                                }}\n                            />\n                    </Form.Field>\n                    <Button color='facebook' type='submit'>Save Changes</Button>\n                    <Button onClick={() => {\n                        props.hide()\n                    }}>Cancel</Button>\n                </Form>\n                {loading && <Loader style={{marginLeft: '38%', marginTop:'2%'}} inline active>Saving Changes..</Loader>}\n            </Segment>\n        </div>\n    )\n}\n","import Topbar from '../components/home/Topbar'\nimport UserPictures from '../components/home/UserPictures'\nimport './styles/profile.scss'\nimport { useContext, useEffect, useState } from 'react'\nimport { UserContext } from '../userContext'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport FeedItem from '../components/home/feed/FeedItem'\nimport EditProfile from '../components/home/EditProfile'\nimport relativeDate from 'relative-date'\nimport { Dimmer, Loader,Button, Statistic } from 'semantic-ui-react'\nconst imageURL = process.env.REACT_APP_API_URL + '/users'\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\n\nexport default function Home() {\n    const {user,setUser} = useContext(UserContext)\n    const history = useHistory()\n    const [posts, setPosts] = useState([])\n    const [profileUser, setProfileUser] = useState(null)\n    const [loading,setLoading] = useState(false)\n    const [following, setFollowing] = useState(false)\n    const [editProfileComponentVisible, setEditProfileComponentVisible] = useState(false)\n\n    \n    const followHandle = () => {\n        const token = localStorage.getItem('token')\n        const action = following ? 'unfollow' : 'follow'\n\n        axios.patch(`/users/${profileUser._id}/${action}`, {}, {\n            headers: {\n                'Authorization':`Bearer ${token}`\n            }\n        })\n        setFollowing(following => !following)\n        \n    }\n\n    \n\n    const fetchPosts = async (id,token) => {\n        try {\n            const res = await axios.get(`/posts/all/${id}`, {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n\n            const sorted = res.data.reverse()\n            setPosts(sorted)\n            setLoading(false)\n        } catch (err) {\n            console.log(err)\n            setLoading(false)\n        }\n    }\n\n\n    useEffect(() => {\n        const verifyUser = async (id) => {\n        const token = localStorage.getItem('token')\n        if (!user) {\n            if (token) {\n                try {\n                    const { data } = await axios.get('/users/self', {\n                        headers: {\n                            'Authorization':`Bearer ${token}`\n                        }\n                    })\n                    setUser(data)\n                    setFollowing ((data.following.find(user => user===id)) ? true : false)\n                    fetchPosts(id,token)\n                } catch (err) {\n                    localStorage.removeItem('token')\n                    history.push('/login')\n                }\n            } else {\n                history.push('/login')\n            }\n        }\n    }\n        \n        setLoading(true)\n        const fetchData = async () => {\n            const token = localStorage.getItem('token')\n            const params = new URLSearchParams(window.location.search)\n            const id = Object.fromEntries(params.entries()).id\n            try {\n                const res = await axios.get(`/users/${id}`, {\n                            headers: {\n                                'Authorization':`Bearer ${token}`\n                            }\n                        })\n                verifyUser(id)\n                setProfileUser(res.data)\n            } catch (err) {\n                verifyUser(id)\n                setProfileUser('None')\n            }\n           setLoading(false)\n        }\n        fetchData()\n    }, [history,setUser,user])\n    \n    return profileUser === 'None' ?\n        <div>\n            {user && <Topbar userImg={imageURL + '/' + user._id + '/profilePicture'} />}\n            <h2>Error 404! Profile Not Found.</h2>\n        </div>\n        : <div className='timelineBody'>\n            {user && <Topbar userImg={imageURL + '/' + user._id + '/profilePicture'} />}\n            <UserPictures userId={profileUser && profileUser._id} />\n            \n            <div className='profileBody'>\n                <h2>{profileUser && profileUser.username}</h2>\n                <p>{profileUser && profileUser.description}</p>\n                <div className=\"stats\">\n                    <Statistic.Group size='tiny' color='teal'>\n                        <Statistic>\n                            <Statistic.Value>{profileUser &&  profileUser.followers.length}</Statistic.Value>\n                            <Statistic.Label>Followers</Statistic.Label>\n                        </Statistic>\n                        <Statistic>\n                            <Statistic.Value>{ profileUser && profileUser.following.length}</Statistic.Value>\n                            <Statistic.Label>Following</Statistic.Label>\n                        </Statistic>\n                    </Statistic.Group>\n                </div>\n                {\n                    (profileUser && profileUser._id) !== (user && user._id) ?\n                        <Button\n                            className='followButton'\n                            color={following ? 'grey' : 'twitter'}\n                            onClick={followHandle}\n                        >\n                            {following ? 'Unfollow' : 'Follow'}\n                        </Button> :\n                        <>\n                            {!editProfileComponentVisible &&\n                                <Button\n                                    className='followButton'\n                                    onClick={() => {\n                                        setEditProfileComponentVisible(true)\n                                    }\n                                }\n                                >Edit Profile</Button>\n                            }\n                            {editProfileComponentVisible && <EditProfile hide={() => {setEditProfileComponentVisible(false)}}/>}\n                        </>\n                }\n                <br/><br/>\n                {loading ?\n                    <Dimmer active>\n                        <Loader active>Loading Posts</Loader>\n                    </Dimmer>\n                    \n                    :\n                    posts.length > 0 ?\n                        profileUser && posts && posts.map(post => <FeedItem\n                        key={post._id}\n                        postUser={{\n                            username: profileUser.username,\n                            profilePicture: process.env.REACT_APP_API_URL + '/users/'+ profileUser._id +'/profilePicture'\n                        }}\n                        post={{\n                            ...post,\n                                    likes: post.likes,\n                                    image: process.env.REACT_APP_API_URL + '/posts/' + post._id + '/image',\n                                    createdAt: relativeDate(new Date(post.createdAt))\n                        }}\n                        />)\n                    : <h5>User hasn't posted yet.</h5>    \n                }\n            </div>\n        </div>\n}","import { useState, useMemo, useContext } from 'react';\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Profile from './pages/Profile'\r\nimport { UserContext } from './userContext';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(useContext(UserContext))\r\n    const providerUser = useMemo(() => ({ user, setUser }), [user, setUser])\r\n\r\n    return (\r\n        <Router>\r\n            <UserContext.Provider value={providerUser}>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path='/login'>\r\n                        <Login />\r\n                    </Route>\r\n                    <Route path='/signup'>\r\n                        <Signup />\r\n                    </Route>\r\n                    <Route path='/profile'>\r\n                        <Profile />\r\n                    </Route>\r\n                </Switch>\r\n            </UserContext.Provider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}